import { FirestoreDataConverter, QueryDocumentSnapshot, Timestamp } from 'firebase/firestore';
import { <%- table.t_id %><%- table.t_name %>Interface } from '@/<%- func.ServiceName %>/Models/<%- table.t_id %><%- table.t_name %>';
import { <%- func.FuncID %><%- func.FuncName %>Interface } from './<%- func.FuncName %>Interface';
import { <%- func.FuncID %><%- func.FuncName %>Build } from './<%- func.FuncName %>Build';

/**
* Export a FirestoreDataConverter to transform <%- func.FuncID %><%- func.FuncName %> into Firestore data.
*/
export const <%- func.FuncID %><%- func.FuncName %>Converter = (): FirestoreDataConverter<<%- func.FuncID %><%- func.FuncName %>Interface> => ({
    /**
    * Convert <%- func.FuncID %><%- func.FuncName %> before be saved to Firestore.
    */
    toFirestore: (data: <%- func.FuncID %><%- func.FuncName %>Interface): <%- table.t_id%><%- table.t_name %>Interface => {
        return {
<% columns.forEach((column) => { -%>
<% if(column.c_datatype==="timestamp") { -%>
            <%- column.c_name %>: Timestamp.fromDate(data.<%- column.c_name %>),
<% } else { -%>
            <%- column.c_name %>: data.<%- column.c_name %>,
<% } -%>
<% }); -%>
        }
    },
    
    /**
    * Convert the data from Firestore to match <%- func.FuncID %><%- func.FuncName %>.
    */
    fromFirestore: (snapshot: QueryDocumentSnapshot<<%- table.t_id%><%- table.t_name %>Interface>): <%- func.FuncID %><%- func.FuncName %>Interface => {
        const initData: <%- func.FuncID %><%- func.FuncName %>Interface = <%- func.FuncID %><%- func.FuncName %>Build();
        return {
<% columns.forEach((column) => { -%>
<% if(column.c_datatype==="timestamp") { -%>
            <%- column.c_name %>: snapshot.data().<%- column.c_name %>.toDate() || initData.<%- column.c_name %>,
<% } else { -%>
            <%- column.c_name %>: snapshot.data().<%- column.c_name %> || initData.<%- column.c_name %>,
<% } -%>
<% }); -%>
        }
    }
});